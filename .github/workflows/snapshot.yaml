#
# Copyright (c) 2023, 2024 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Snapshot Release"

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'helidon-*.x'

env:
  JAVA_VERSION: '21'
  JAVA_DISTRO: 'oracle'
  MAVEN_ARGS: |
    -B -e
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=60
    -Dmaven.wagon.http.retryHandler.count=3
    -Djdk.toolchain.version=${JAVA_VERSION}
    -Dcache.enabled=true

concurrency:
  group: snapshot-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate:
    uses: ./.github/workflows/validate.yml
  stage:
    needs: [ validate ]
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    environment: release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag }}
      - uses: actions/download-artifact@v4
        with:
          pattern: javadoc-jars-*
          merge-multiple: true
      - shell: bash
        env:
          GPG_PASSPHRASE: ${{ secrets.HELIDON_GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY: ${{ secrets.HELIDON_GPG_PRIVATE_KEY }}
        run: etc/scripts/setup-gpg.sh
      - uses: ./.github/actions/common
        with:
          build-cache: read-only
          artifact-name: io-helidon-artifacts-${{ github.ref_name }}
          artifact-path: staging
          run: |
            mvn ${MAVEN_ARGS} \
              -Prelease \
              -DskipTests \
              -DaltDeploymentRepository=":::file://${PWD}/staging" \
              -Dcache.loadSuffixes=javadoc \
              deploy
  deploy:
    needs: stage
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    environment: release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag }}
      - uses: actions/download-artifact@v4
        with:
          pattern: io-helidon-artifacts-*
          path: ./staging
      - shell: bash
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          etc/scripts/nexus.sh deploy_snapshots \
            --dir=staging
